generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Department {
  id          String   @id
  name        String
  code        String
  description String?
  tenantId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  Tenant      Tenant   @relation(fields: [tenantId], references: [id])
  User        User[]

  @@unique([code, tenantId])
}

model Material {
  id                                  String        @id
  code                                String
  name                                String
  description                         String?
  type                                MaterialType
  uom                                 UnitOfMeasure
  minStock                            Float         @default(0)
  maxStock                            Float         @default(0)
  currentStock                        Float         @default(0)
  reorderPoint                        Float         @default(0)
  location                            String?
  specifications                      Json?
  isActive                            Boolean       @default(true)
  tenantId                            String
  createdById                         String
  lastUpdatedById                     String
  createdAt                           DateTime      @default(now())
  updatedAt                           DateTime
  User_Material_createdByIdToUser     User          @relation("Material_createdByIdToUser", fields: [createdById], references: [id])
  User_Material_lastUpdatedByIdToUser User          @relation("Material_lastUpdatedByIdToUser", fields: [lastUpdatedById], references: [id])
  Tenant                              Tenant        @relation(fields: [tenantId], references: [id])

  @@unique([code, tenantId])
}

model Permission {
  id          String     @id
  name        String     @unique
  description String?
  roles       UserRole[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime
}

model Tenant {
  id          String       @id
  name        String
  legalName   String
  description String?
  logo        String?
  address     String
  city        String
  state       String
  country     String
  pinCode     String
  gstNumber   String?
  phoneNumber String
  email       String
  website     String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime
  Department  Department[]
  Material    Material[]
  User        User[]
}

model User {
  id                                      String      @id
  email                                   String      @unique
  cognitoId                               String      @unique
  employeeId                              String      @unique
  firstName                               String
  lastName                                String
  role                                    UserRole    @default(OPERATOR)
  departmentId                            String?
  tenantId                                String
  designation                             String
  phoneNumber                             String
  emergencyContact                        String?
  joiningDate                             DateTime
  address                                 String?
  skills                                  String[]
  isActive                                Boolean     @default(true)
  createdAt                               DateTime    @default(now())
  updatedAt                               DateTime
  Material_Material_createdByIdToUser     Material[]  @relation("Material_createdByIdToUser")
  Material_Material_lastUpdatedByIdToUser Material[]  @relation("Material_lastUpdatedByIdToUser")
  Department                              Department? @relation(fields: [departmentId], references: [id])
  Tenant                                  Tenant      @relation(fields: [tenantId], references: [id])
}

enum MaterialType {
  RAW_MATERIAL
  CONSUMABLE
  FINISHED_GOOD
  PATTERN
  CORE
  MOULD
}

enum UnitOfMeasure {
  KG
  TONS
  PIECES
  LITERS
  METERS
}

enum UserRole {
  SUPERUSER
  TENANT_ADMIN
  TENANT_USER
  PRODUCTION_MANAGER
  QUALITY_MANAGER
  INVENTORY_MANAGER
  OPERATOR
  MAINTENANCE
  SALES_MANAGER
  ACCOUNTS_MANAGER
}
